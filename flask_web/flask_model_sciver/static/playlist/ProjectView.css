.cover-panel {
	position: fixed;
	left: 0;
	top: 0;
	z-index: 1000;
	width: 100vw;
	height: 100vh;
	transform: translateX(-100%);  /* project-view의 cover는 생기는게 아니라 원래 있던 위치에서 왼쪽으로 빼서 화면상에서만 감춰둔 것 */
	transform-origin: left;
	transition: 0.5s;
	will-change: transform;
}
.cover-panel.active {
	transform: translateX(0);  /* js로 active 발생 시 project-view의 cover를 다시 원래 위치로 복구시켜 열리는 효과를 줌 */
}
.back-btn {
	content: '';
	position: fixed;
	z-index: 1000;
	width: 50px;
	height: 50px;
	margin: 20px 0 0 20px;
	padding: 0;
	font-weight: normal;
	opacity: 0;
	transform: translateX(50px);
	transition: 0.5s 0.5s;  /* transition의 s-value 중 앞은 재생시간, 뒤는 지연(delay)시간이다 */
	background: transparent;
}

/* 뒤로가기 버튼을 이미지를 쓰지않고 직접 span태그로 그린 것 (가상요소 before, after 사용) */
.back-btn span {
	position: absolute;
	left: 0;
	top: 50%;
	width: 100%;
	height: 1px;
	background: #222;
	pointer-events: none;
}

/* 가상 요소는 주로 장식적인 요소나 아이콘을 추가하거나, 특정 디자인 패턴을 구현할 때 유용하게 사용 */
/* 가상 요소(::before, ::after) 스타일을 설정하면 HTML 문서의 실제 구조에는 해당 내용이 없지만 브라우저가 렌더링할 때 화면에 보이게 됨 */
.back-btn:before {
	content: '';  /* HTML에 직접 존재하지 않는 요소이므로 content 속성을 사용하여 콘텐츠를 정의 */
	position: absolute;
	left: 0;
	top: 50%;
	width: 60%;
	height: 1px;
	background: #222;
	transform: rotate(-45deg);
	transform-origin: left;
}
.back-btn:after {
	content: '';
	position: absolute;
	left: 0;
	top: 50%;
	width: 60%;
	height: 1px;
	background: #222;
	transform: rotate(45deg);
	transform-origin: left;
}

/* project-view가 열릴 때 제목, 본문, 이미지가 시간차로 등장하도록 설정*/
.project-view {
	overflow-y: auto;
	height: 100vh;
}
.project-view-header {
	padding: 4rem 0 1rem;
	opacity: 0;
	transform: translateY(50px);
	transition: 0.5s 1s;
}
.project-view-header h1 {
	margin-top: 2rem;
	font-size: 9.4vw;
}
.project-view-content {
	padding: 1rem 0;
}
.project-view-desc {
	position: relative;
	z-index: 100;
	opacity: 0;
	line-height: 1.6;
	transform: translateY(50px);
	transition: 0.5s 1.3s;
}
.project-view-desc p {
	margin-bottom: 1em;
}
.project-view-image {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 100%;
	height: 100vw;
	/* background-repeat: no-repeat; */
	background-position: center bottom;
	background-size: 100%;
	background-attachment: fixed;
	opacity: 0;
	transform: translateY(50px);
	transition: 0.5s 1.6s;
}

/* project-view가 열릴 때 제목, 본문, 이미지가 시간차로 등장하도록 설정*/
.cover-panel.active .project-view-header {
	opacity: 1;
	transform: translateY(0);
}
.cover-panel.active .project-view-desc {
	opacity: 1;
	transform: translateY(0);
}
.cover-panel.active .back-btn {
	opacity: 1;
	transform: translateX(0);
}
.cover-panel.active .project-view-image {
	opacity: 1;
	transform: translateY(0);
}

/* project-view가 닫힐 때 제목, 본문, 이미지가 시간차로 사라지도록 설정*/
.cover-panel.close .project-view-header {
	opacity: 0;
	transform: translateY(50px);
	transition-duration: 0.2s;
	transition-delay: 0.4s;
}
.cover-panel.close .project-view-desc {
	opacity: 0;
	transform: translateY(50px);
	transition-duration: 0.25s;
	transition-delay: 0.2s;
}
.cover-panel.close .project-view-image {
	opacity: 0;
	transform: translateY(50px);
	transition-delay: 0s;
}
.cover-panel.close .back-btn {
	opacity: 0;
	transform: translateX(-50px);
	transition-duration: 0.25s;
	transition-delay: 0.6s;
}


@media (min-width: 600px) {  /* 브라우저 폭이 600px 이상일 때부터 적용되는 미디어 쿼리 */
	.project-view-content {
		display: flex;  /* 브라우저 폭이 600px 이상일 때는 flex로 이미지가 하부에 위치하는게 아니라 본문 옆에 위치하도록 배치 */
		padding: 1rem 20px 5rem;
	}
	.project-view-header h1 {
		margin-bottom: 0.5em;
	}
	.project-view-image {  
		flex: 1 0 auto;  /* 브라우저 폭이 600px 이상일 때는 flex로 이미지가 하부에 위치하는게 아니라 본문 옆에 위치하도록 배치 */
		position: static;  
		width: 40%;
		height: 0;
		padding-bottom: 20%;
		margin-right: 30px;
		background-attachment: unset;
	}
	.project-view-desc {
		padding: 0;
	}
}